<!--
  ~ Copyright (c) 2007-2010 by The Broad Institute, Inc. and the Massachusetts Institute of Technology.
  ~ All Rights Reserved.
  ~
  ~ This software is licensed under the terms of the GNU Lesser General Public License (LGPL), Version 2.1 which
  ~ is available at http://www.opensource.org/licenses/lgpl-2.1.php.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS." THE BROAD AND MIT MAKE NO REPRESENTATIONS OR WARRANTIES OF
  ~ ANY KIND CONCERNING THE SOFTWARE, EXPRESS OR IMPLIED, INCLUDING, WITHOUT LIMITATION, WARRANTIES
  ~ OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, NONINFRINGEMENT, OR THE ABSENCE OF LATENT
  ~ OR OTHER DEFECTS, WHETHER OR NOT DISCOVERABLE.  IN NO EVENT SHALL THE BROAD OR MIT, OR THEIR
  ~ RESPECTIVE TRUSTEES, DIRECTORS, OFFICERS, EMPLOYEES, AND AFFILIATES BE LIABLE FOR ANY DAMAGES OF
  ~ ANY KIND, INCLUDING, WITHOUT LIMITATION, INCIDENTAL OR CONSEQUENTIAL DAMAGES, ECONOMIC
  ~ DAMAGES OR INJURY TO PROPERTY AND LOST PROFITS, REGARDLESS OF WHETHER THE BROAD OR MIT SHALL
  ~ BE ADVISED, SHALL HAVE OTHER REASON TO KNOW, OR IN FACT SHALL KNOW OF THE POSSIBILITY OF THE
  ~ FOREGOING.
  -->

<project name="IGV" default="build" basedir=".">

    <!-- Properties-->
    <property name="jar.name" value="igv.jar"/>

    <property name="main-class" value="org.broad.igv.ui.IGVMainFrame"/>
    <property name="alias" value="Broad-alias"/>
    <property name="key-password" value="Broad-keypass"/>
    <property name="store-password" value="Broad-storepass"/>


    <!-- Source and lib directories -->
    <property name="src.dir" value="${basedir}/src/"/>
    <property name="lib.dir" value="${basedir}/lib/"/>


    <!-- Temp directory.  Sources are compiled here prior to archiving -->
    <property name="tmp.dir" value="${basedir}/tmp/"/>
    <property name="resource.dir" value="${tmp.dir}resources/"/>

    <!-- Distribution directory.  Binary distribution is placed here -->
    <property name="dist.dir" value="${basedir}/dist/"/>
    <property name="jar.path" value="${dist.dir}${jar.name}"/>
    <property name="dist.lib.dir" value="${dist.dir}lib/"/>

    <!-- The deployment folder for the JWS distribution .It is expected that this property will be overridden -->
    <property name="deploy.dir" value="${basedir}/deploy/"/>

    <!-- build specific properties. These are normally set by Hudson during the build process -->
    <property name="build-number" value="0.0"/>
    <property name="version" value="v0.0"/>
    <property name="data-server-url" value="http://www.broadinstitute.org/igvdata/$$_dataServerRegistry.txt"/>

    <!-- Src/binary archive file settings -->
    <property name="src.archive.name" value="IGVDistribution_${version}"/>
    <property name="src.archive.dest.dir" value="${basedir}"/>
    <property name="src.archive.zip" value="${src.archive.dest.dir}/${src.archive.name}.zip"/>

    <property name="bin.archive.name" value="IGV_${version}"/>
    <property name="bin.archive.zip" value="${bin.archive.name}.zip"/>


    <target name="init" depends="clean">

        <delete dir="${tmp.dir}"/>
        <delete dir="${dist.dir}"/>

        <mkdir dir="${tmp.dir}"/>
        <mkdir dir="${dist.dir}"/>

        <!-- Copy resource files to the tmp directory -->
        <copy todir="${tmp.dir}" overwrite="true">
            <fileset dir="${src.dir}">
                <exclude name="**/*.form"/>
                <exclude name="**/*.java"/>
                <exclude name="**/*.svn"/>
                <exclude name="**/manifest.mf"/>
            </fileset>
        </copy>

        <!-- Unzip jars to the tmp directory -->
        <unzip dest="${tmp.dir}">
            <patternset>
                <include name="**/*"/>
                <exclude name="META-INF/**"/>
            </patternset>
            <fileset dir="${lib.dir}">
                <include name="**/*.jar"/>
                <exclude name="**/batik-codec.jar"/>
            </fileset>
        </unzip>

        <copy file="${lib.dir}batik-codec.jar" tofile="${dist.dir}batik-codec.jar" overwrite="true"/>

        <tstamp>
            <format property="timestamp" pattern="MM/dd/yyyy hh:mm aa"/>
        </tstamp>

        <echo message="Resource ${resource.dir}"/>
        <echo message="Version ${version}"/>
        <replace file="${resource.dir}about.properties" token="@VERSION" value="${version}"/>
        <replace file="${resource.dir}about.properties" token="@BUILD" value="${build-number}"/>
        <replace file="${resource.dir}about.properties" token="@TIMESTAMP" value="${timestamp}"/>
        <replace file="${resource.dir}about.properties" token="@DEFAULT_MASTER_RESOURCE_URL"
                 value="${data-server-url}"/>

    </target>


    <target name="compile" depends="init">
        <javac srcdir="${src.dir}" debug="on" destdir="${tmp.dir}">
            <classpath>
                <pathelement path="${tmp.dir}"/>
            </classpath>
        </javac>
    </target>


    <!-- build the IGV jar -->
    <target name="build" depends="compile">
        <jar destfile="${jar.path}" basedir="${tmp.dir}" compress="true" duplicate="preserve">
            <classfileset dir="${tmp.dir}">
                <root classname="${main-class}"/>
            </classfileset>
            <manifest>
                <attribute name="Class-Path" value="batik-codec.jar"/>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Main-Class" value="${main-class}"/>
            </manifest>
        </jar>
    </target>



    <!-- Sign all jars if a keystore is defined -->
    <target name="sign-jars" if="keystore">
        <signjar jar="${jar.path}" alias="${alias}" keypass="${key-password}" storepass="${store-password}"
                 keystore="${keystore}"/>
        <signjar jar="${dist.dir}batik-codec.jar" alias="${alias}" keypass="${key-password}"
                 storepass="${store-password}" keystore="${keystore}"/>
    </target>


    <target name="build-jws" depends="build">
        <antcall target="sign-jars"/>
    </target>

    <!--Create binary archive -->
    <target name="publishBin" depends="build">

        <!-- Clean -->
        <delete dir="${tmp.dir}"/>
        <mkdir dir="${tmp.dir}"/>
        <mkdir dir="${tmp.dir}/${bin.archive.name}"/>


        <copy todir="${tmp.dir}/${bin.archive.name}" file="${basedir}/dist/igv.jar"/>
        <copy todir="${tmp.dir}/${bin.archive.name}" file="${basedir}/dist/batik-codec.jar"/>

        <!-- Base directory -->
        <copy todir="${tmp.dir}/${bin.archive.name}">
            <fileset dir="${basedir}/">
                <include name="readme.txt"/>
                <include name="igv.sh"/>
                <include name="igv.command"/>
                <include name="igv.bat"/>
            </fileset>
        </copy>

        <delete file="${bin.archive.zip}"/>
        <zip destfile="${bin.archive.zip}">
            <zipfileset dir="${tmp.dir}" filemode="755">
                <include name="igv_linux.sh"/>
                <include name="igv_mac-intel.command"/>
                <include name="igv_mac-powerpc.sh"/>
            </zipfileset>
            <zipfileset dir="${tmp.dir}">
                <exclude name="igv_linux.sh"/>
                <exclude name="igv_mac-intel.command"/>
                <exclude name="igv_mac-powerpc.sh"/>
            </zipfileset>
        </zip>

    </target>

    <!--Create a src/binary archive -->
    <target name="publish" depends="build">

        <!-- Clean -->
        <delete dir="${tmp.dir}"/>
        <mkdir dir="${tmp.dir}"/>
        <mkdir dir="${tmp.dir}/${src.archive.name}"/>

        <!-- Base directory -->
        <copy todir="${tmp.dir}/${src.archive.name}">
            <fileset dir="${basedir}/">
                <include name="build.xml"/>
                <include name="readme_src.txt"/>
                <include name="igv.sh"/>
                <include name="igv.command"/>
                <include name="igv.bat"/>
            </fileset>

        </copy>


        <!-- Src and lib directory
        <mkdir dir="${tmp.dir}/${src.archive.name}/src" />  -->
        <copy todir="${tmp.dir}/${src.archive.name}/src">
            <fileset dir="${src.dir}"/>
        </copy>
        <replace file="${tmp.dir}/${src.archive.name}/build.xml" token="@version" value="${version}"/>
        <replace file="${tmp.dir}/${src.archive.name}/src/resources/about.properties" token="@VERSION"
                 value="${version}"/>
        <replace file="${tmp.dir}/${src.archive.name}/src/resources/about.properties" token="@BUILD"
                 value="${build-number}"/>
        <replace file="${tmp.dir}/${src.archive.name}/src/resources/about.properties" token="@TIMESTAMP"
                 value="${timestamp}"/>
        <replace file="${tmp.dir}/${src.archive.name}/src/resources/about.properties"
                 token="@DEFAULT_MASTER_RESOURCE_URL" value="${data-server-url}"/>
        <copy todir="${tmp.dir}/${src.archive.name}/lib">
            <fileset dir="${lib.dir}"/>
        </copy>

        <delete file="${src.archive.zip}"/>
        <zip destfile="${src.archive.zip}">
            <zipfileset dir="${tmp.dir}" filemode="755">
                <include name="igv.sh"/>
                <include name="igv.command"/>
                <include name="igv.bat"/>
            </zipfileset>
            <zipfileset dir="${tmp.dir}">
                <exclude name="igv.sh"/>
                <exclude name="igv.command"/>
                <exclude name="igv.bat"/>
            </zipfileset>
        </zip>
    </target>

    <!-- Deploy the application -->
    <target name="deploy">
        <copy todir="${deploy.dir}" overwrite="true">
            <fileset dir="${dist.dir}">
                <include name="lib/**"/>
            </fileset>
            <fileset file="${dist.dir}${jar.name}"/>
            <fileset file="${dist.dir}batik-codec.jar"/>
        </copy>
    </target>

    <!-- Clean all generated artifacts -->
    <target name="clean">
        <delete dir="${tmp.dir}"/>
        <delete dir="${dist.dir}"/>
    </target>

    <target name="all" depends="clean, init, build-jws, deploy, publish, publishBin"/>

</project>
